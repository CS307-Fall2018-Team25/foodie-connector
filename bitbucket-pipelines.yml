pipelines:
  branches:
    dev/backend*:
    - step:
        name: "PHP CodeSniffer and PHPUnit"
        image:
            name: ${IMAGE_NAME}:php-testing-latest
            username: $DOCKER_HUB_USERNAME
            password: $DOCKER_HUB_PASSWORD
            email: $DOCKER_HUB_EMAIL
        caches:
        - backend-vendor
        script:
        - /entrypoint.sh
        - cd backend
        - phpcs .
        - composer install
        - cp .env.example
        - php artisan key:generate
        - phpunit
    dev/frontend*:
    - step:
        name: "ESLint"
        image: node:8-alpine
        caches:
        - frontend-node-modules
        script:
        - cd frontend
        - yarn
        - yarn run lint
    release/ci/docker-test-php:
    - step:
        name: Build docker for PHP tests
        services:
        - docker
        caches:
        - docker
        script:
        - cd docker/test-php
        - docker build -t ${IMAGE_NAME}:test-php .
        - cd ../ && chmod +x docker-login.sh && ./docker-login.sh
        - docker push ${IMAGE_NAME}:test-php
    release/ci/docker-deploy-base:
    - step:
        name: Build base docker for deployment
        services:
        - docker
        caches:
        - docker
        script:
        - cd docker/deploy-base
        - docker build -t ${IMAGE_NAME}:deploy-base .
        - cd ../ && chmod +x docker-login.sh && ./docker-login.sh
        - docker push ${IMAGE_NAME}:deploy-base
  custom:
    build-testing:
    - step:
        name: Build docker for testing
        services:
        - docker
        caches:
        - docker
        script:
        - export APP_KEY=$TESTING_APP_KEY
        - export APP_URL=$TESTING_APP_URL
        - export DB_DATABASE=$TESTING_DB_DATABASE
        - export REDIS_HOST=$TESTING_REDIS_HOST
        - export REDIS_PASSWORD=$TESTING_REDIS_PASSWORD
        - export SPARKPOST_SECRET=$TESTING_SPARKPOST_SECRET
        - export IMAGE_TAG=test
        - chmod +x build.sh
        - ./build.sh
    - step:
        name: Deloy testing server
        deployment: test
        script:
        - export IMAGE_TAG=test
        - chmod +x deploy.sh
        - ./deploy.sh

definitions:
  caches:
    frontend-node-modules: frontend/node_modules
    backend-vendor: backend/vendor
